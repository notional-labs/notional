name: image_build_all-dev
on:
  workflow_dispatch:
  # remove if you don't want to build on a schedule
  # schedule:
  # - cron:  '30 6 1 * *'
  # remove if you don't want to build when commits are pushed to you main/master branch
  push:
    branches:
      - master
      - main

jobs:
  prepare_release:
    runs-on: ubuntu-latest
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: "YYYYMMDDHHmm"
      - id: release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.time.outputs.time }}
          release_name: Dev ${{ steps.time.outputs.time }}
          draft: true
          prerelease: true
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_id: ${{ steps.release.outputs.id }}

  release:
    runs-on: ubuntu-22.04
    needs: prepare_release
    strategy:
      matrix:
        DEVICE: [opi3,pine-h64,pine64,pbpro,opi4-lts,opi3-lts,pinebook,pinephone,pinetab,vim3,vim3l,rock64]
        EDITION: [minimal] # later, we will use "notional for both.  This will do for now though."
        BRANCH: [unstable]
    steps:
      - uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}
      - id: time
        uses: boredland/get-time-action@2.0.0
        with:
          format: "YYYYMMDD"
      - id: image-build
        uses: manjaro-arm/rootfs@master
        with:
          device: ${{ matrix.device }}
          edition: ${{ matrix.edition }}
          branch: ${{ matrix.branch }}
          version: ${{ steps.time.outputs.time }}
          #CI_PUB_KEY: "${{ secrets.CI_PUB_KEY }}"
          #CI_GPG_SECRET: "${{ secrets.CI_GPG_SECRET }}"
          #CI_GPG_PASSPHRASE: "${{ secrets.CI_GPG_PASSPHRASE }}"
      - id: upload_release
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_PATH }}
          asset_name: ${{ env.FILE_PATH }}
          asset_content_type: application/x-iso-image
      - id: upload_sha1
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_SHA1 }}
          asset_name: ${{ env.FILE_SHA1 }}
          asset_content_type: text/plain
      - id: upload_torrent
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
          asset_path: ./${{ env.FILE_TORRENT }}
          asset_name: ${{ env.FILE_TORRENT }}
          asset_content_type: application/x-bittorrent
      #      -
      #        id: upload_sig
      #        uses: actions/upload-release-asset@v1.0.2
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #        with:
      #          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      #          asset_path: ./${{ env.FILE_SIG }}
      #          asset_name: ${{ env.FILE_SIG }}
      #          asset_content_type: text/plain
      #      -
      #        id: upload_pkg
      #        uses: actions/upload-release-asset@v1.0.2
      #        env:
      #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #        with:
      #          upload_url: ${{ needs.prepare_release.outputs.upload_url }}
      #          asset_path: ./${{ env.FILE_PKG }}
      #          asset_name: ${{ env.FILE_PKG }}
      #          asset_content_type: text/plain
      - name: rollback_release
        if: failure()
        uses: author/action-rollback@stable
        with:
          release_id: ${{ needs.prepare_release.outputs.release_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
